- hosts: localhost
  remote_user: root
  become: true

  vars:
    - ICTF_API_SECRET: "{{ lookup('file', '/opt/ictf/secrets/database-api/secret') }}"
    - ICTF_USER_PASSWORD_SALT: "{{ lookup('file', '/opt/ictf/secrets/database-api/salt') }}"
    - ICTF_MYSQL_DATABASE_PASSWORD: "{{ lookup('file', '/opt/ictf/secrets/database-api/mysql') }}"

  # handlers:

  #   - name: restart nginx
  #     service: name=nginx state=restarted

  #   - name: restart ictf-db-export-s3
  #     service: name=ictf-db-export-s3 state=restarted

  tasks:
  - name: fail if ICTF_API_SECRET is not specified
    fail:
      msg: "database requires ICTF_API_SECRET to be set"
    when: ICTF_API_SECRET is not defined

  - name: fail if ICTF_MYSQL_DATABASE_PASSWORD is not specified
    fail:
      msg: "database requires ICTF_MYSQL_DATABASE_PASSWORD to be set"
    when: ICTF_MYSQL_DATABASE_PASSWORD is not defined

  - name: fail if ICTF_USER_PASSWORD_SALT is not specified
    fail:
      msg: "database requires ICTF_USER_PASSWORD_SALT to be set"
    when: ICTF_USER_PASSWORD_SALT is not defined

  # - name: setting hostname
  #   hostname:
  #     name: "database"

  - name: mysql - start MySQL service to apply new configurations
    command: service mysql start

  # - name: Add mappings to /etc/hosts
  #   blockinfile:
  #     dest: /etc/hosts
  #     block: |
  #       {{ item.ip }} {{ item.name }}
  #     marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  #   with_items:
  #     - { name: "database", ip: 127.0.0.1 }

  - name: change mysql password
    shell: "mysqladmin -u ictf -phacker password {{ ICTF_MYSQL_DATABASE_PASSWORD }}"

  - name: ictf-database-api configuration - set API_SECRET
    replace:
      name=/opt/ictf/settings/database-api.py
      regexp="^(API_SECRET).*$"
      replace="\1 = \"{{ ICTF_API_SECRET }}\""

  - name: ictf-database-api configuration - set MYSQL_DATABASE_PASSWORD
    replace:
      name=/opt/ictf/settings/database-api.py
      regexp="^(MYSQL_DATABASE_PASSWORD).*$"
      replace="\1 = \"{{ ICTF_MYSQL_DATABASE_PASSWORD }}\""

  - name: ictf-database-api configuration - set USER_PASSWORD_SALT
    replace:
      name=/opt/ictf/settings/database-api.py
      regexp="^(USER_PASSWORD_SALT).*$"
      replace="\1 = \"{{ ICTF_USER_PASSWORD_SALT }}\""
    # notify:
    #   restart nginx

  - name: create aws_router_config.yml
    template:
      src: /opt/ictf/database/provisioning/aws_config.yml.j2
      dest: /opt/ictf/database/aws_config.yml

  - name: Fix permission for configuration file
    file:
      path: /opt/ictf/database/aws_config.yml
      owner: hacker
      group: hacker
      mode: 0755
    # notify:
    #   - restart ictf-db-export-s3
