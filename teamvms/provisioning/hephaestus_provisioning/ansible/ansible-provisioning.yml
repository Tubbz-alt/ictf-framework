- hosts: all
  remote_user: root
  become: true

  vars:
    - GAME_CONFIG: "{{ lookup('file', '{{ GAME_CONFIG_PATH }}') | from_json }}"
    - SERVICES: "{{ GAME_CONFIG | json_query('services[?state==`enabled`].name') }}"
    - TEAM_NAMES: "{{ GAME_CONFIG | json_query('teams[].name') }}"
    - HOST_SERVICES_PATH: "{{ GAME_CONFIG.service_metadata.host_dir }}"
    - GUEST_SERVICES_PATH: "{{ GAME_CONFIG.service_metadata.guest_dir }}"

  # roles:
  #   - teamvm_base

  tasks:
    - name: install base dependencies
      include_role:
        name: teamvm_base
      when: BASE is defined
    
    - name: install primed dependencies
      include_role:
        name: teamvm_primed
      vars:
        PRIMER_GUEST_SERVICES_PATH: "{{ GUEST_SERVICES_PATH }}"
        PRIMER_HOST_SERVICES_PATH: "{{ HOST_SERVICES_PATH }}"
        PRIMER_SERVICES: "{{ SERVICES }}"
        PRIMER_LOCAL: "{{ LOCAL }}"
      when: PRIMER is defined

    # - name: fail if SERVICES is not specified
    #   fail:
    #     msg: "the teamvm requires SERVICES to be set"
    #   when: SERVICES is not defined

    # # - name: install requirements
    # #   package: name={{ item }} state=latest update_cache=yes
    # #   with_items:
    # #     - zip 
    # #     - tmux 
    # #     - screen 
    # #     - vim 
    # #     - emacs 
    # #     - nano 
    # #     - curl 
    # #     - wget 
    # #     - python2.7 
    # #     - python3 
    # #     - python-pip 
    # #     - python3-pip 
    # #     - ruby 
    # #     - perl 
    # #     - gcc 
    # #     - binutils 
    # #     - build-essential 
    # #     - tcpdump 
    # #     - docker.io 
    # #     - ansible 
    # #     - socat 
    # #     - openvpn 
    # #     - net-tools 
    # #     - iputils-ping

    # # - name: install docker-compose
    # #   get_url:
    # #     url: https://github.com/docker/compose/releases/download/1.25.4/docker-compose-Linux-x86_64
    # #     dest: /usr/local/bin/docker-compose
    # #     mode: 0755

    # # - name: add user to docker group
    # #   command: usermod -aG docker ctf

    # ########################    CREATE SERVICE BASE DIRECTORY   ###############################
    # - name: create service directory
    #   file:
    #     path: "{{ GUEST_SERVICES_PATH }}"
    #     owner: ctf
    #     group: ctf
    #     state: directory
    #     mode: 0755

    # ########################          DEPLOY THE SERVICES       ###############################
    # - name: deploy CTF services
    #   include_role:
    #     name: deploy_ctf_service
    #   vars:
    #     SERVICE_NAME: "{{item}}"
    #   with_items: "{{ SERVICES }}"

    # - name: Generate docker-compose.yml
    #   template:
    #     src: ./files/docker-compose.yml.j2
    #     dest: "{{GUEST_SERVICES_PATH}}/docker-compose.yml"

    # - name: build service docker files in parallel
    #   shell: "docker-compose build --parallel"
    #   args:
    #     chdir: "{{GUEST_SERVICES_PATH}}"
    #   when: LOCAL is not defined

    # ########################            CLEAN UP YO SHIT        ###############################
    # - name: prune docker cache
    #   shell: docker system prune --volumes -f
    #   when: LOCAL is not defined



