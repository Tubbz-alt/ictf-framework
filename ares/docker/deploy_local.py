#!/usr/bin/env python

import argparse
import subprocess
import os
import json
import math

from jinja2 import Environment, FileSystemLoader, select_autoescape


DOCKER_COMPOSE_TEMPLATE = "docker-compose-local.yml.j2"
DOCKER_COMPOSE_OUTPUT_FILE = "docker-compose-local.generated.yml"

STAGE_1_MACHINES = ["database", "gamebot", "scoreboard", "teaminterface"]
STAGE_2_MACHINES = ["scriptbot"]

def spawn_local_game(game_config_path, secrets_path):
    if not os.path.exists(game_config_path):
        print("The specified game_config path does not exist")
        return

    if not os.path.exists(secrets_path):
        print("The specified path to the secret folder does not exist")
        return

    with open(game_config_path, 'r') as f:
        game_config = json.load(f)

    with open(os.path.join(secrets_path, 'database-api', 'secret'), 'r') as f:
        api_secret = f.read().strip()

    num_scriptbots = int(math.ceil(len(game_config["teams"]) / 10.0))

    jinja_env = Environment(
        loader=FileSystemLoader(searchpath='./'),
        autoescape=select_autoescape(['yml'])
    )

    template = jinja_env.get_template(DOCKER_COMPOSE_TEMPLATE)

    with open(DOCKER_COMPOSE_OUTPUT_FILE, 'w') as out_f:
        out_f.write(template.render(
            num_scriptbots=num_scriptbots,
            api_secret=api_secret 
        ))
    
    print('''
Configuration for docker-compose successfully generated in ./{0}

Spawn the infrastructure locally with the following command:
    - docker-compose -f {0} up --remove-orphans

Destroy the infrastructure locally with the following command:
    - docker-compose -f {0} down
    '''.format(DOCKER_COMPOSE_OUTPUT_FILE))


if __name__ == '__main__':
    argparser = argparse.ArgumentParser()
    argparser.add_argument('game_config', type=str, help="Path to game_config.json file")
    argparser.add_argument('secrets_path', type=str, help="Path to the folder generated by make_secret.sh")
    args = argparser.parse_args()

    spawn_local_game(args.game_config, args.secrets_path)
